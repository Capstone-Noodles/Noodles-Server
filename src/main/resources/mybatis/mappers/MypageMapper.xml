<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="capston.noodles.User.mapper.MypageMapper">

    <select id="getFriendUserInfo" parameterType = "map" resultType="MypageResponse">
        select u.profileImage, u.nickname, u.identification, u.description, ifnull(x.following, 0) following, ifnull(y.follower, 0) follower, group_concat(pi.postIdx) postIdxList, group_concat(pi.image) imageList
             ,(case z.followCnt
                   when 1 then 1
                   else 0
            end) as isFollowed
        from UserInfo u
                 left join (
            select count(f.userIdx) following, f.userIdx
            from Follow f
            where f.status = 'Y'
            group by f.userIdx
        )x on x.userIdx = u.userIdx
                 left join (
            select count(f.followingIdx) follower, f.followingIdx
            from Follow f
            where f.status = 'Y'
            group by f.followingIdx
        )y on y.followingIdx = u.userIdx
                 left join Post p on p.userIdx = u.userIdx and p.status = 'Y' and p.isMain = 1
                 left join PostImage pi on p.postIdx = pi.postIdx
                 left join (
            select count(*) followCnt, f.followingIdx
            from Follow f
            where f.userIdx = #{myIdx}
              and f.status = 'Y'
            group by f.followingIdx
        )z on z.followingIdx = u.userIdx
        where u.userIdx = #{userId};
    </select>

    <select id="getUserInfo" parameterType = "long" resultType="MypageResponse">
        select u.userIdx,u.profileImage, u.nickname, u.identification, u.description, ifnull(x.following, 0) following, ifnull(y.follower, 0) follower, group_concat(pi.postIdx) postIdxList, group_concat(pi.image) imageList
        from UserInfo u
                 left join (
            select count(f.userIdx) following, f.userIdx
            from Follow f
            where f.status = 'Y'
            group by f.userIdx
        )x on x.userIdx = u.userIdx
                 left join (
            select count(f.followingIdx) follower, f.followingIdx
            from Follow f
            where f.status = 'Y'
            group by f.followingIdx
        )y on y.followingIdx = u.userIdx
                 left join Post p on p.userIdx = u.userIdx and p.status = 'Y' and p.isMain = 1
                 left join PostImage pi on p.postIdx = pi.postIdx
        where u.userIdx = #{userId};
    </select>


    <update id="updateProfile" parameterType="capston.noodles.User.model.entity.dto.UpdateProfileDto">
        update UserInfo
        set nickname = #{nickname}, description = #{description}, profileImage = #{profileImage}
        where userIdx = #{userIdx};
    </update>

    <select id="getImageByUserIdx" parameterType="Long" resultType="String">
        select profileImage
        from UserInfo
        where userIdx = #{userIdx};
    </select>

    <update id="removeMain" parameterType="Long">
        update Post p
        set p.isMain = 0
        where p.userIdx = #{userIdx};
    </update>
    <update id="addMain" parameterType="map">
        update Post p
        set p.isMain = 1
        where p.userIdx = #{userIdx}
          and p.postIdx = #{postIdx};
    </update>

</mapper>