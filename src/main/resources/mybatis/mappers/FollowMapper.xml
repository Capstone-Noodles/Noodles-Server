<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="capston.noodles.Follow.mapper.FollowMapper">
   <insert id="save" parameterType="capston.noodles.Follow.model.dao.Follow" useGeneratedKeys="true" keyProperty="followIdx">
       Insert into Follow (status, userIdx, followingIdx)
        values(#{status}, #{userIdx}, #{followingIdx})
   </insert>
    <select id="getFollowByUserIdxs" parameterType="capston.noodles.Follow.model.dao.Follow" resultType="capston.noodles.Follow.model.dao.Follow">
        select * from Follow where userIdx=#{userIdx} and followingIdx=#{followingIdx}
    </select>
    <update id="updateFollowStatus" parameterType="capston.noodles.Follow.model.dao.Follow" >
        update Follow set status = #{status} where followIdx = #{followIdx}
    </update>
    <select id="selectAllFollowWithUserIdx" parameterType="Long" resultType="capston.noodles.Follow.model.dto.GetFollowResponse">
        select UI.nickname, UI.profileImage, F.userIdx,
               (case
                    when F.userIdx in (select F2.followingIdx from Follow F2 where F2.status = 'Y')
                        then 'T'
                    else 'F'
                   end) as isFollower
        from Follow F
                 join UserInfo UI on F.userIdx = UI.userIdx
        where F.followingIdx = #{userIdx}
          and F.status = 'Y'
        order by F.updatedAt;
    </select>
</mapper>
